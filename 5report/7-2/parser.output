   0  $accept : %entry% $end

   1  toplevel : LET inbefore IN boolian_expr SEMISEMI
   2           | syntaxexpression SEMISEMI
   3           | letexpression
   4           | LET letandexpression

   5  inbefore : var EQ boolian_expr LETAND inbefore
   6           | var EQ boolian_expr

   7  letandexpression : var EQ boolian_expr LETAND letandexpression SEMISEMI
   8                   | var EQ boolian_expr

   9  letexpression : LET var EQ boolian_expr letexpression
  10                | LET var EQ boolian_expr SEMISEMI

  11  syntaxexpression : IF boolian_expr THEN boolian_expr ELSE boolian_expr
  12                   | boolian_expr

  13  boolian_expr : boolian_expr OR factor2_expr
  14               | factor2_expr

  15  factor2_expr : factor2_expr AND expr
  16               | expr

  17  expr : arith_expr EQ arith_expr
  18       | arith_expr LT arith_expr
  19       | arith_expr

  20  arith_expr : arith_expr PLUS factor_expr
  21             | arith_expr MINUS factor_expr
  22             | factor_expr

  23  factor_expr : factor_expr TIMES atomic_expr
  24              | factor_expr DIV atomic_expr
  25              | atomic_expr

  26  atomic_expr : INT
  27              | BOOL
  28              | ID
  29              | LPAR expr RPAR

  30  var : ID

  31  %entry% : '\001' toplevel

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . toplevel  (31)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 6
	IF  shift 7
	LPAR  shift 8
	.  error

	toplevel  goto 9
	boolian_expr  goto 10
	syntaxexpression  goto 11
	letexpression  goto 12
	factor2_expr  goto 13
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	atomic_expr : INT .  (26)

	.  reduce 26


state 4
	atomic_expr : BOOL .  (27)

	.  reduce 27


state 5
	atomic_expr : ID .  (28)

	.  reduce 28


state 6
	toplevel : LET . inbefore IN boolian_expr SEMISEMI  (1)
	toplevel : LET . letandexpression  (4)
	letexpression : LET . var EQ boolian_expr letexpression  (9)
	letexpression : LET . var EQ boolian_expr SEMISEMI  (10)

	ID  shift 18
	.  error

	inbefore  goto 19
	letandexpression  goto 20
	var  goto 21


state 7
	syntaxexpression : IF . boolian_expr THEN boolian_expr ELSE boolian_expr  (11)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	boolian_expr  goto 22
	factor2_expr  goto 13
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 8
	atomic_expr : LPAR . expr RPAR  (29)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	expr  goto 23
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 9
	%entry% : '\001' toplevel .  (31)

	.  reduce 31


state 10
	syntaxexpression : boolian_expr .  (12)
	boolian_expr : boolian_expr . OR factor2_expr  (13)

	OR  shift 24
	SEMISEMI  reduce 12


state 11
	toplevel : syntaxexpression . SEMISEMI  (2)

	SEMISEMI  shift 25
	.  error


state 12
	toplevel : letexpression .  (3)

	.  reduce 3


state 13
	boolian_expr : factor2_expr .  (14)
	factor2_expr : factor2_expr . AND expr  (15)

	AND  shift 26
	$end  reduce 14
	LET  reduce 14
	IN  reduce 14
	THEN  reduce 14
	ELSE  reduce 14
	SEMISEMI  reduce 14
	OR  reduce 14
	LETAND  reduce 14


state 14
	factor2_expr : expr .  (16)

	.  reduce 16


state 15
	expr : arith_expr . EQ arith_expr  (17)
	expr : arith_expr . LT arith_expr  (18)
	expr : arith_expr .  (19)
	arith_expr : arith_expr . PLUS factor_expr  (20)
	arith_expr : arith_expr . MINUS factor_expr  (21)

	PLUS  shift 27
	MINUS  shift 28
	EQ  shift 29
	LT  shift 30
	$end  reduce 19
	LET  reduce 19
	IN  reduce 19
	THEN  reduce 19
	ELSE  reduce 19
	RPAR  reduce 19
	SEMISEMI  reduce 19
	AND  reduce 19
	OR  reduce 19
	LETAND  reduce 19


state 16
	arith_expr : factor_expr .  (22)
	factor_expr : factor_expr . TIMES atomic_expr  (23)
	factor_expr : factor_expr . DIV atomic_expr  (24)

	TIMES  shift 31
	DIV  shift 32
	$end  reduce 22
	LET  reduce 22
	IN  reduce 22
	PLUS  reduce 22
	MINUS  reduce 22
	EQ  reduce 22
	LT  reduce 22
	THEN  reduce 22
	ELSE  reduce 22
	RPAR  reduce 22
	SEMISEMI  reduce 22
	AND  reduce 22
	OR  reduce 22
	LETAND  reduce 22


state 17
	factor_expr : atomic_expr .  (25)

	.  reduce 25


state 18
	var : ID .  (30)

	.  reduce 30


state 19
	toplevel : LET inbefore . IN boolian_expr SEMISEMI  (1)

	IN  shift 33
	.  error


state 20
	toplevel : LET letandexpression .  (4)

	.  reduce 4


state 21
	inbefore : var . EQ boolian_expr LETAND inbefore  (5)
	inbefore : var . EQ boolian_expr  (6)
	letandexpression : var . EQ boolian_expr LETAND letandexpression SEMISEMI  (7)
	letandexpression : var . EQ boolian_expr  (8)
	letexpression : LET var . EQ boolian_expr letexpression  (9)
	letexpression : LET var . EQ boolian_expr SEMISEMI  (10)

	EQ  shift 34
	.  error


state 22
	syntaxexpression : IF boolian_expr . THEN boolian_expr ELSE boolian_expr  (11)
	boolian_expr : boolian_expr . OR factor2_expr  (13)

	THEN  shift 35
	OR  shift 24
	.  error


state 23
	atomic_expr : LPAR expr . RPAR  (29)

	RPAR  shift 36
	.  error


state 24
	boolian_expr : boolian_expr OR . factor2_expr  (13)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	factor2_expr  goto 37
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 25
	toplevel : syntaxexpression SEMISEMI .  (2)

	.  reduce 2


state 26
	factor2_expr : factor2_expr AND . expr  (15)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	expr  goto 38
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 27
	arith_expr : arith_expr PLUS . factor_expr  (20)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	factor_expr  goto 39
	atomic_expr  goto 17


state 28
	arith_expr : arith_expr MINUS . factor_expr  (21)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	factor_expr  goto 40
	atomic_expr  goto 17


state 29
	expr : arith_expr EQ . arith_expr  (17)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 41
	factor_expr  goto 16
	atomic_expr  goto 17


state 30
	expr : arith_expr LT . arith_expr  (18)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 42
	factor_expr  goto 16
	atomic_expr  goto 17


state 31
	factor_expr : factor_expr TIMES . atomic_expr  (23)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	atomic_expr  goto 43


state 32
	factor_expr : factor_expr DIV . atomic_expr  (24)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	atomic_expr  goto 44


state 33
	toplevel : LET inbefore IN . boolian_expr SEMISEMI  (1)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	boolian_expr  goto 45
	factor2_expr  goto 13
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 34
	inbefore : var EQ . boolian_expr LETAND inbefore  (5)
	inbefore : var EQ . boolian_expr  (6)
	letandexpression : var EQ . boolian_expr LETAND letandexpression SEMISEMI  (7)
	letandexpression : var EQ . boolian_expr  (8)
	letexpression : LET var EQ . boolian_expr letexpression  (9)
	letexpression : LET var EQ . boolian_expr SEMISEMI  (10)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	boolian_expr  goto 46
	factor2_expr  goto 13
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 35
	syntaxexpression : IF boolian_expr THEN . boolian_expr ELSE boolian_expr  (11)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	boolian_expr  goto 47
	factor2_expr  goto 13
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 36
	atomic_expr : LPAR expr RPAR .  (29)

	.  reduce 29


state 37
	boolian_expr : boolian_expr OR factor2_expr .  (13)
	factor2_expr : factor2_expr . AND expr  (15)

	AND  shift 26
	$end  reduce 13
	LET  reduce 13
	IN  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	SEMISEMI  reduce 13
	OR  reduce 13
	LETAND  reduce 13


state 38
	factor2_expr : factor2_expr AND expr .  (15)

	.  reduce 15


state 39
	arith_expr : arith_expr PLUS factor_expr .  (20)
	factor_expr : factor_expr . TIMES atomic_expr  (23)
	factor_expr : factor_expr . DIV atomic_expr  (24)

	TIMES  shift 31
	DIV  shift 32
	$end  reduce 20
	LET  reduce 20
	IN  reduce 20
	PLUS  reduce 20
	MINUS  reduce 20
	EQ  reduce 20
	LT  reduce 20
	THEN  reduce 20
	ELSE  reduce 20
	RPAR  reduce 20
	SEMISEMI  reduce 20
	AND  reduce 20
	OR  reduce 20
	LETAND  reduce 20


state 40
	arith_expr : arith_expr MINUS factor_expr .  (21)
	factor_expr : factor_expr . TIMES atomic_expr  (23)
	factor_expr : factor_expr . DIV atomic_expr  (24)

	TIMES  shift 31
	DIV  shift 32
	$end  reduce 21
	LET  reduce 21
	IN  reduce 21
	PLUS  reduce 21
	MINUS  reduce 21
	EQ  reduce 21
	LT  reduce 21
	THEN  reduce 21
	ELSE  reduce 21
	RPAR  reduce 21
	SEMISEMI  reduce 21
	AND  reduce 21
	OR  reduce 21
	LETAND  reduce 21


state 41
	expr : arith_expr EQ arith_expr .  (17)
	arith_expr : arith_expr . PLUS factor_expr  (20)
	arith_expr : arith_expr . MINUS factor_expr  (21)

	PLUS  shift 27
	MINUS  shift 28
	$end  reduce 17
	LET  reduce 17
	IN  reduce 17
	THEN  reduce 17
	ELSE  reduce 17
	RPAR  reduce 17
	SEMISEMI  reduce 17
	AND  reduce 17
	OR  reduce 17
	LETAND  reduce 17


state 42
	expr : arith_expr LT arith_expr .  (18)
	arith_expr : arith_expr . PLUS factor_expr  (20)
	arith_expr : arith_expr . MINUS factor_expr  (21)

	PLUS  shift 27
	MINUS  shift 28
	$end  reduce 18
	LET  reduce 18
	IN  reduce 18
	THEN  reduce 18
	ELSE  reduce 18
	RPAR  reduce 18
	SEMISEMI  reduce 18
	AND  reduce 18
	OR  reduce 18
	LETAND  reduce 18


state 43
	factor_expr : factor_expr TIMES atomic_expr .  (23)

	.  reduce 23


state 44
	factor_expr : factor_expr DIV atomic_expr .  (24)

	.  reduce 24


state 45
	toplevel : LET inbefore IN boolian_expr . SEMISEMI  (1)
	boolian_expr : boolian_expr . OR factor2_expr  (13)

	SEMISEMI  shift 48
	OR  shift 24
	.  error


state 46
	inbefore : var EQ boolian_expr . LETAND inbefore  (5)
	inbefore : var EQ boolian_expr .  (6)
	letandexpression : var EQ boolian_expr . LETAND letandexpression SEMISEMI  (7)
	letandexpression : var EQ boolian_expr .  (8)
	letexpression : LET var EQ boolian_expr . letexpression  (9)
	letexpression : LET var EQ boolian_expr . SEMISEMI  (10)
	boolian_expr : boolian_expr . OR factor2_expr  (13)

	LET  shift 49
	SEMISEMI  shift 50
	OR  shift 24
	LETAND  shift 51
	$end  reduce 8
	IN  reduce 6

	letexpression  goto 52


state 47
	syntaxexpression : IF boolian_expr THEN boolian_expr . ELSE boolian_expr  (11)
	boolian_expr : boolian_expr . OR factor2_expr  (13)

	ELSE  shift 53
	OR  shift 24
	.  error


state 48
	toplevel : LET inbefore IN boolian_expr SEMISEMI .  (1)

	.  reduce 1


state 49
	letexpression : LET . var EQ boolian_expr letexpression  (9)
	letexpression : LET . var EQ boolian_expr SEMISEMI  (10)

	ID  shift 18
	.  error

	var  goto 54


state 50
	letexpression : LET var EQ boolian_expr SEMISEMI .  (10)

	.  reduce 10


state 51
	inbefore : var EQ boolian_expr LETAND . inbefore  (5)
	letandexpression : var EQ boolian_expr LETAND . letandexpression SEMISEMI  (7)

	ID  shift 18
	.  error

	inbefore  goto 55
	letandexpression  goto 56
	var  goto 57


state 52
	letexpression : LET var EQ boolian_expr letexpression .  (9)

	.  reduce 9


state 53
	syntaxexpression : IF boolian_expr THEN boolian_expr ELSE . boolian_expr  (11)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	boolian_expr  goto 58
	factor2_expr  goto 13
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 54
	letexpression : LET var . EQ boolian_expr letexpression  (9)
	letexpression : LET var . EQ boolian_expr SEMISEMI  (10)

	EQ  shift 59
	.  error


state 55
	inbefore : var EQ boolian_expr LETAND inbefore .  (5)

	.  reduce 5


state 56
	letandexpression : var EQ boolian_expr LETAND letandexpression . SEMISEMI  (7)

	SEMISEMI  shift 60
	.  error


state 57
	inbefore : var . EQ boolian_expr LETAND inbefore  (5)
	inbefore : var . EQ boolian_expr  (6)
	letandexpression : var . EQ boolian_expr LETAND letandexpression SEMISEMI  (7)
	letandexpression : var . EQ boolian_expr  (8)

	EQ  shift 61
	.  error


state 58
	syntaxexpression : IF boolian_expr THEN boolian_expr ELSE boolian_expr .  (11)
	boolian_expr : boolian_expr . OR factor2_expr  (13)

	OR  shift 24
	SEMISEMI  reduce 11


state 59
	letexpression : LET var EQ . boolian_expr letexpression  (9)
	letexpression : LET var EQ . boolian_expr SEMISEMI  (10)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	boolian_expr  goto 62
	factor2_expr  goto 13
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 60
	letandexpression : var EQ boolian_expr LETAND letandexpression SEMISEMI .  (7)

	.  reduce 7


state 61
	inbefore : var EQ . boolian_expr LETAND inbefore  (5)
	inbefore : var EQ . boolian_expr  (6)
	letandexpression : var EQ . boolian_expr LETAND letandexpression SEMISEMI  (7)
	letandexpression : var EQ . boolian_expr  (8)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	boolian_expr  goto 63
	factor2_expr  goto 13
	expr  goto 14
	arith_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 62
	letexpression : LET var EQ boolian_expr . letexpression  (9)
	letexpression : LET var EQ boolian_expr . SEMISEMI  (10)
	boolian_expr : boolian_expr . OR factor2_expr  (13)

	LET  shift 49
	SEMISEMI  shift 50
	OR  shift 24
	.  error

	letexpression  goto 52


state 63
	inbefore : var EQ boolian_expr . LETAND inbefore  (5)
	inbefore : var EQ boolian_expr .  (6)
	letandexpression : var EQ boolian_expr . LETAND letandexpression SEMISEMI  (7)
	letandexpression : var EQ boolian_expr .  (8)
	boolian_expr : boolian_expr . OR factor2_expr  (13)

	OR  shift 24
	LETAND  shift 51
	IN  reduce 6
	SEMISEMI  reduce 8


24 terminals, 14 nonterminals
32 grammar rules, 64 states
