   0  $accept : %entry% $end

   1  toplevel : expr SEMISEMI
   2           | letexpression

   3  letexpression : LET var EQ expr letexpression
   4                | LET var EQ expr SEMISEMI

   5  expr : LET var EQ expr IN expr
   6       | IF expr THEN expr ELSE expr
   7       | arith_expr EQ arith_expr
   8       | arith_expr LT arith_expr
   9       | boolian_expr

  10  boolian_expr : boolian_expr OR factor2_expr
  11               | factor2_expr

  12  factor2_expr : factor2_expr AND arith_expr
  13               | arith_expr

  14  arith_expr : arith_expr PLUS factor_expr
  15             | arith_expr MINUS factor_expr
  16             | factor_expr

  17  factor_expr : factor_expr TIMES atomic_expr
  18              | factor_expr DIV atomic_expr
  19              | atomic_expr

  20  atomic_expr : INT
  21              | BOOL
  22              | ID
  23              | LPAR expr RPAR

  24  var : ID

  25  %entry% : '\001' toplevel

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . toplevel  (25)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 6
	IF  shift 7
	LPAR  shift 8
	.  error

	toplevel  goto 9
	expr  goto 10
	letexpression  goto 11
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	atomic_expr : INT .  (20)

	.  reduce 20


state 4
	atomic_expr : BOOL .  (21)

	.  reduce 21


state 5
	atomic_expr : ID .  (22)

	.  reduce 22


state 6
	letexpression : LET . var EQ expr letexpression  (3)
	letexpression : LET . var EQ expr SEMISEMI  (4)
	expr : LET . var EQ expr IN expr  (5)

	ID  shift 17
	.  error

	var  goto 18


state 7
	expr : IF . expr THEN expr ELSE expr  (6)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 19
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 20
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 8
	atomic_expr : LPAR . expr RPAR  (23)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 19
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 21
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 9
	%entry% : '\001' toplevel .  (25)

	.  reduce 25


state 10
	toplevel : expr . SEMISEMI  (1)

	SEMISEMI  shift 22
	.  error


state 11
	toplevel : letexpression .  (2)

	.  reduce 2


state 12
	expr : arith_expr . EQ arith_expr  (7)
	expr : arith_expr . LT arith_expr  (8)
	factor2_expr : arith_expr .  (13)
	arith_expr : arith_expr . PLUS factor_expr  (14)
	arith_expr : arith_expr . MINUS factor_expr  (15)

	PLUS  shift 23
	MINUS  shift 24
	EQ  shift 25
	LT  shift 26
	LET  reduce 13
	IN  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	RPAR  reduce 13
	SEMISEMI  reduce 13
	AND  reduce 13
	OR  reduce 13


state 13
	expr : boolian_expr .  (9)
	boolian_expr : boolian_expr . OR factor2_expr  (10)

	OR  shift 27
	LET  reduce 9
	IN  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	RPAR  reduce 9
	SEMISEMI  reduce 9


state 14
	boolian_expr : factor2_expr .  (11)
	factor2_expr : factor2_expr . AND arith_expr  (12)

	AND  shift 28
	LET  reduce 11
	IN  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	RPAR  reduce 11
	SEMISEMI  reduce 11
	OR  reduce 11


state 15
	arith_expr : factor_expr .  (16)
	factor_expr : factor_expr . TIMES atomic_expr  (17)
	factor_expr : factor_expr . DIV atomic_expr  (18)

	TIMES  shift 29
	DIV  shift 30
	LET  reduce 16
	IN  reduce 16
	PLUS  reduce 16
	MINUS  reduce 16
	EQ  reduce 16
	LT  reduce 16
	THEN  reduce 16
	ELSE  reduce 16
	RPAR  reduce 16
	SEMISEMI  reduce 16
	AND  reduce 16
	OR  reduce 16


state 16
	factor_expr : atomic_expr .  (19)

	.  reduce 19


state 17
	var : ID .  (24)

	.  reduce 24


state 18
	letexpression : LET var . EQ expr letexpression  (3)
	letexpression : LET var . EQ expr SEMISEMI  (4)
	expr : LET var . EQ expr IN expr  (5)

	EQ  shift 31
	.  error


state 19
	expr : LET . var EQ expr IN expr  (5)

	ID  shift 17
	.  error

	var  goto 32


state 20
	expr : IF expr . THEN expr ELSE expr  (6)

	THEN  shift 33
	.  error


state 21
	atomic_expr : LPAR expr . RPAR  (23)

	RPAR  shift 34
	.  error


state 22
	toplevel : expr SEMISEMI .  (1)

	.  reduce 1


state 23
	arith_expr : arith_expr PLUS . factor_expr  (14)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	factor_expr  goto 35
	atomic_expr  goto 16


state 24
	arith_expr : arith_expr MINUS . factor_expr  (15)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	factor_expr  goto 36
	atomic_expr  goto 16


state 25
	expr : arith_expr EQ . arith_expr  (7)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 37
	factor_expr  goto 15
	atomic_expr  goto 16


state 26
	expr : arith_expr LT . arith_expr  (8)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 38
	factor_expr  goto 15
	atomic_expr  goto 16


state 27
	boolian_expr : boolian_expr OR . factor2_expr  (10)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 39
	factor2_expr  goto 40
	factor_expr  goto 15
	atomic_expr  goto 16


state 28
	factor2_expr : factor2_expr AND . arith_expr  (12)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 41
	factor_expr  goto 15
	atomic_expr  goto 16


state 29
	factor_expr : factor_expr TIMES . atomic_expr  (17)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	atomic_expr  goto 42


state 30
	factor_expr : factor_expr DIV . atomic_expr  (18)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	atomic_expr  goto 43


state 31
	letexpression : LET var EQ . expr letexpression  (3)
	letexpression : LET var EQ . expr SEMISEMI  (4)
	expr : LET var EQ . expr IN expr  (5)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 19
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 44
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 32
	expr : LET var . EQ expr IN expr  (5)

	EQ  shift 45
	.  error


state 33
	expr : IF expr THEN . expr ELSE expr  (6)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 19
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 46
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 34
	atomic_expr : LPAR expr RPAR .  (23)

	.  reduce 23


state 35
	arith_expr : arith_expr PLUS factor_expr .  (14)
	factor_expr : factor_expr . TIMES atomic_expr  (17)
	factor_expr : factor_expr . DIV atomic_expr  (18)

	TIMES  shift 29
	DIV  shift 30
	LET  reduce 14
	IN  reduce 14
	PLUS  reduce 14
	MINUS  reduce 14
	EQ  reduce 14
	LT  reduce 14
	THEN  reduce 14
	ELSE  reduce 14
	RPAR  reduce 14
	SEMISEMI  reduce 14
	AND  reduce 14
	OR  reduce 14


state 36
	arith_expr : arith_expr MINUS factor_expr .  (15)
	factor_expr : factor_expr . TIMES atomic_expr  (17)
	factor_expr : factor_expr . DIV atomic_expr  (18)

	TIMES  shift 29
	DIV  shift 30
	LET  reduce 15
	IN  reduce 15
	PLUS  reduce 15
	MINUS  reduce 15
	EQ  reduce 15
	LT  reduce 15
	THEN  reduce 15
	ELSE  reduce 15
	RPAR  reduce 15
	SEMISEMI  reduce 15
	AND  reduce 15
	OR  reduce 15


state 37
	expr : arith_expr EQ arith_expr .  (7)
	arith_expr : arith_expr . PLUS factor_expr  (14)
	arith_expr : arith_expr . MINUS factor_expr  (15)

	PLUS  shift 23
	MINUS  shift 24
	LET  reduce 7
	IN  reduce 7
	THEN  reduce 7
	ELSE  reduce 7
	RPAR  reduce 7
	SEMISEMI  reduce 7


state 38
	expr : arith_expr LT arith_expr .  (8)
	arith_expr : arith_expr . PLUS factor_expr  (14)
	arith_expr : arith_expr . MINUS factor_expr  (15)

	PLUS  shift 23
	MINUS  shift 24
	LET  reduce 8
	IN  reduce 8
	THEN  reduce 8
	ELSE  reduce 8
	RPAR  reduce 8
	SEMISEMI  reduce 8


state 39
	factor2_expr : arith_expr .  (13)
	arith_expr : arith_expr . PLUS factor_expr  (14)
	arith_expr : arith_expr . MINUS factor_expr  (15)

	PLUS  shift 23
	MINUS  shift 24
	LET  reduce 13
	IN  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	RPAR  reduce 13
	SEMISEMI  reduce 13
	AND  reduce 13
	OR  reduce 13


state 40
	boolian_expr : boolian_expr OR factor2_expr .  (10)
	factor2_expr : factor2_expr . AND arith_expr  (12)

	AND  shift 28
	LET  reduce 10
	IN  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	RPAR  reduce 10
	SEMISEMI  reduce 10
	OR  reduce 10


state 41
	factor2_expr : factor2_expr AND arith_expr .  (12)
	arith_expr : arith_expr . PLUS factor_expr  (14)
	arith_expr : arith_expr . MINUS factor_expr  (15)

	PLUS  shift 23
	MINUS  shift 24
	LET  reduce 12
	IN  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	RPAR  reduce 12
	SEMISEMI  reduce 12
	AND  reduce 12
	OR  reduce 12


state 42
	factor_expr : factor_expr TIMES atomic_expr .  (17)

	.  reduce 17


state 43
	factor_expr : factor_expr DIV atomic_expr .  (18)

	.  reduce 18


state 44
	letexpression : LET var EQ expr . letexpression  (3)
	letexpression : LET var EQ expr . SEMISEMI  (4)
	expr : LET var EQ expr . IN expr  (5)

	LET  shift 47
	IN  shift 48
	SEMISEMI  shift 49
	.  error

	letexpression  goto 50


state 45
	expr : LET var EQ . expr IN expr  (5)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 19
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 51
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 46
	expr : IF expr THEN expr . ELSE expr  (6)

	ELSE  shift 52
	.  error


state 47
	letexpression : LET . var EQ expr letexpression  (3)
	letexpression : LET . var EQ expr SEMISEMI  (4)

	ID  shift 17
	.  error

	var  goto 53


state 48
	expr : LET var EQ expr IN . expr  (5)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 19
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 54
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 49
	letexpression : LET var EQ expr SEMISEMI .  (4)

	.  reduce 4


state 50
	letexpression : LET var EQ expr letexpression .  (3)

	.  reduce 3


state 51
	expr : LET var EQ expr . IN expr  (5)

	IN  shift 48
	.  error


state 52
	expr : IF expr THEN expr ELSE . expr  (6)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 19
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 55
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 53
	letexpression : LET var . EQ expr letexpression  (3)
	letexpression : LET var . EQ expr SEMISEMI  (4)

	EQ  shift 56
	.  error


state 54
	expr : LET var EQ expr IN expr .  (5)

	.  reduce 5


state 55
	expr : IF expr THEN expr ELSE expr .  (6)

	.  reduce 6


state 56
	letexpression : LET var EQ . expr letexpression  (3)
	letexpression : LET var EQ . expr SEMISEMI  (4)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 19
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 57
	arith_expr  goto 12
	boolian_expr  goto 13
	factor2_expr  goto 14
	factor_expr  goto 15
	atomic_expr  goto 16


state 57
	letexpression : LET var EQ expr . letexpression  (3)
	letexpression : LET var EQ expr . SEMISEMI  (4)

	LET  shift 47
	SEMISEMI  shift 49
	.  error

	letexpression  goto 50


23 terminals, 11 nonterminals
26 grammar rules, 58 states
