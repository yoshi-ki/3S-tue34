   0  $accept : %entry% $end

   1  toplevel : expr SEMISEMI
   2           | letexpression
   3           | letandexpr

   4  letexpression : LET var EQ expr letexpression
   5                | LET var EQ expr SEMISEMI

   6  letandexpr : LET var EQ expr LETAND var EQ expr SEMISEMI

   7  expr : LET var EQ expr IN expr
   8       | IF expr THEN expr ELSE expr
   9       | arith_expr EQ arith_expr
  10       | arith_expr LT arith_expr
  11       | boolian_expr

  12  boolian_expr : boolian_expr OR factor2_expr
  13               | factor2_expr

  14  factor2_expr : factor2_expr AND arith_expr
  15               | arith_expr

  16  arith_expr : arith_expr PLUS factor_expr
  17             | arith_expr MINUS factor_expr
  18             | factor_expr

  19  factor_expr : factor_expr TIMES atomic_expr
  20              | factor_expr DIV atomic_expr
  21              | atomic_expr

  22  atomic_expr : INT
  23              | BOOL
  24              | ID
  25              | LPAR expr RPAR

  26  var : ID

  27  %entry% : '\001' toplevel

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . toplevel  (27)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 6
	IF  shift 7
	LPAR  shift 8
	.  error

	toplevel  goto 9
	expr  goto 10
	letexpression  goto 11
	letandexpr  goto 12
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	atomic_expr : INT .  (22)

	.  reduce 22


state 4
	atomic_expr : BOOL .  (23)

	.  reduce 23


state 5
	atomic_expr : ID .  (24)

	.  reduce 24


state 6
	letexpression : LET . var EQ expr letexpression  (4)
	letexpression : LET . var EQ expr SEMISEMI  (5)
	letandexpr : LET . var EQ expr LETAND var EQ expr SEMISEMI  (6)
	expr : LET . var EQ expr IN expr  (7)

	ID  shift 18
	.  error

	var  goto 19


state 7
	expr : IF . expr THEN expr ELSE expr  (8)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 21
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 8
	atomic_expr : LPAR . expr RPAR  (25)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 22
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 9
	%entry% : '\001' toplevel .  (27)

	.  reduce 27


state 10
	toplevel : expr . SEMISEMI  (1)

	SEMISEMI  shift 23
	.  error


state 11
	toplevel : letexpression .  (2)

	.  reduce 2


state 12
	toplevel : letandexpr .  (3)

	.  reduce 3


state 13
	expr : arith_expr . EQ arith_expr  (9)
	expr : arith_expr . LT arith_expr  (10)
	factor2_expr : arith_expr .  (15)
	arith_expr : arith_expr . PLUS factor_expr  (16)
	arith_expr : arith_expr . MINUS factor_expr  (17)

	PLUS  shift 24
	MINUS  shift 25
	EQ  shift 26
	LT  shift 27
	LET  reduce 15
	IN  reduce 15
	THEN  reduce 15
	ELSE  reduce 15
	RPAR  reduce 15
	SEMISEMI  reduce 15
	AND  reduce 15
	OR  reduce 15
	LETAND  reduce 15


state 14
	expr : boolian_expr .  (11)
	boolian_expr : boolian_expr . OR factor2_expr  (12)

	OR  shift 28
	LET  reduce 11
	IN  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	RPAR  reduce 11
	SEMISEMI  reduce 11
	LETAND  reduce 11


state 15
	boolian_expr : factor2_expr .  (13)
	factor2_expr : factor2_expr . AND arith_expr  (14)

	AND  shift 29
	LET  reduce 13
	IN  reduce 13
	THEN  reduce 13
	ELSE  reduce 13
	RPAR  reduce 13
	SEMISEMI  reduce 13
	OR  reduce 13
	LETAND  reduce 13


state 16
	arith_expr : factor_expr .  (18)
	factor_expr : factor_expr . TIMES atomic_expr  (19)
	factor_expr : factor_expr . DIV atomic_expr  (20)

	TIMES  shift 30
	DIV  shift 31
	LET  reduce 18
	IN  reduce 18
	PLUS  reduce 18
	MINUS  reduce 18
	EQ  reduce 18
	LT  reduce 18
	THEN  reduce 18
	ELSE  reduce 18
	RPAR  reduce 18
	SEMISEMI  reduce 18
	AND  reduce 18
	OR  reduce 18
	LETAND  reduce 18


state 17
	factor_expr : atomic_expr .  (21)

	.  reduce 21


state 18
	var : ID .  (26)

	.  reduce 26


state 19
	letexpression : LET var . EQ expr letexpression  (4)
	letexpression : LET var . EQ expr SEMISEMI  (5)
	letandexpr : LET var . EQ expr LETAND var EQ expr SEMISEMI  (6)
	expr : LET var . EQ expr IN expr  (7)

	EQ  shift 32
	.  error


state 20
	expr : LET . var EQ expr IN expr  (7)

	ID  shift 18
	.  error

	var  goto 33


state 21
	expr : IF expr . THEN expr ELSE expr  (8)

	THEN  shift 34
	.  error


state 22
	atomic_expr : LPAR expr . RPAR  (25)

	RPAR  shift 35
	.  error


state 23
	toplevel : expr SEMISEMI .  (1)

	.  reduce 1


state 24
	arith_expr : arith_expr PLUS . factor_expr  (16)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	factor_expr  goto 36
	atomic_expr  goto 17


state 25
	arith_expr : arith_expr MINUS . factor_expr  (17)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	factor_expr  goto 37
	atomic_expr  goto 17


state 26
	expr : arith_expr EQ . arith_expr  (9)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 38
	factor_expr  goto 16
	atomic_expr  goto 17


state 27
	expr : arith_expr LT . arith_expr  (10)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 39
	factor_expr  goto 16
	atomic_expr  goto 17


state 28
	boolian_expr : boolian_expr OR . factor2_expr  (12)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 40
	factor2_expr  goto 41
	factor_expr  goto 16
	atomic_expr  goto 17


state 29
	factor2_expr : factor2_expr AND . arith_expr  (14)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	arith_expr  goto 42
	factor_expr  goto 16
	atomic_expr  goto 17


state 30
	factor_expr : factor_expr TIMES . atomic_expr  (19)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	atomic_expr  goto 43


state 31
	factor_expr : factor_expr DIV . atomic_expr  (20)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	.  error

	atomic_expr  goto 44


state 32
	letexpression : LET var EQ . expr letexpression  (4)
	letexpression : LET var EQ . expr SEMISEMI  (5)
	letandexpr : LET var EQ . expr LETAND var EQ expr SEMISEMI  (6)
	expr : LET var EQ . expr IN expr  (7)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 45
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 33
	expr : LET var . EQ expr IN expr  (7)

	EQ  shift 46
	.  error


state 34
	expr : IF expr THEN . expr ELSE expr  (8)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 47
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 35
	atomic_expr : LPAR expr RPAR .  (25)

	.  reduce 25


state 36
	arith_expr : arith_expr PLUS factor_expr .  (16)
	factor_expr : factor_expr . TIMES atomic_expr  (19)
	factor_expr : factor_expr . DIV atomic_expr  (20)

	TIMES  shift 30
	DIV  shift 31
	LET  reduce 16
	IN  reduce 16
	PLUS  reduce 16
	MINUS  reduce 16
	EQ  reduce 16
	LT  reduce 16
	THEN  reduce 16
	ELSE  reduce 16
	RPAR  reduce 16
	SEMISEMI  reduce 16
	AND  reduce 16
	OR  reduce 16
	LETAND  reduce 16


state 37
	arith_expr : arith_expr MINUS factor_expr .  (17)
	factor_expr : factor_expr . TIMES atomic_expr  (19)
	factor_expr : factor_expr . DIV atomic_expr  (20)

	TIMES  shift 30
	DIV  shift 31
	LET  reduce 17
	IN  reduce 17
	PLUS  reduce 17
	MINUS  reduce 17
	EQ  reduce 17
	LT  reduce 17
	THEN  reduce 17
	ELSE  reduce 17
	RPAR  reduce 17
	SEMISEMI  reduce 17
	AND  reduce 17
	OR  reduce 17
	LETAND  reduce 17


state 38
	expr : arith_expr EQ arith_expr .  (9)
	arith_expr : arith_expr . PLUS factor_expr  (16)
	arith_expr : arith_expr . MINUS factor_expr  (17)

	PLUS  shift 24
	MINUS  shift 25
	LET  reduce 9
	IN  reduce 9
	THEN  reduce 9
	ELSE  reduce 9
	RPAR  reduce 9
	SEMISEMI  reduce 9
	LETAND  reduce 9


state 39
	expr : arith_expr LT arith_expr .  (10)
	arith_expr : arith_expr . PLUS factor_expr  (16)
	arith_expr : arith_expr . MINUS factor_expr  (17)

	PLUS  shift 24
	MINUS  shift 25
	LET  reduce 10
	IN  reduce 10
	THEN  reduce 10
	ELSE  reduce 10
	RPAR  reduce 10
	SEMISEMI  reduce 10
	LETAND  reduce 10


state 40
	factor2_expr : arith_expr .  (15)
	arith_expr : arith_expr . PLUS factor_expr  (16)
	arith_expr : arith_expr . MINUS factor_expr  (17)

	PLUS  shift 24
	MINUS  shift 25
	LET  reduce 15
	IN  reduce 15
	THEN  reduce 15
	ELSE  reduce 15
	RPAR  reduce 15
	SEMISEMI  reduce 15
	AND  reduce 15
	OR  reduce 15
	LETAND  reduce 15


state 41
	boolian_expr : boolian_expr OR factor2_expr .  (12)
	factor2_expr : factor2_expr . AND arith_expr  (14)

	AND  shift 29
	LET  reduce 12
	IN  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	RPAR  reduce 12
	SEMISEMI  reduce 12
	OR  reduce 12
	LETAND  reduce 12


state 42
	factor2_expr : factor2_expr AND arith_expr .  (14)
	arith_expr : arith_expr . PLUS factor_expr  (16)
	arith_expr : arith_expr . MINUS factor_expr  (17)

	PLUS  shift 24
	MINUS  shift 25
	LET  reduce 14
	IN  reduce 14
	THEN  reduce 14
	ELSE  reduce 14
	RPAR  reduce 14
	SEMISEMI  reduce 14
	AND  reduce 14
	OR  reduce 14
	LETAND  reduce 14


state 43
	factor_expr : factor_expr TIMES atomic_expr .  (19)

	.  reduce 19


state 44
	factor_expr : factor_expr DIV atomic_expr .  (20)

	.  reduce 20


state 45
	letexpression : LET var EQ expr . letexpression  (4)
	letexpression : LET var EQ expr . SEMISEMI  (5)
	letandexpr : LET var EQ expr . LETAND var EQ expr SEMISEMI  (6)
	expr : LET var EQ expr . IN expr  (7)

	LET  shift 48
	IN  shift 49
	SEMISEMI  shift 50
	LETAND  shift 51
	.  error

	letexpression  goto 52


state 46
	expr : LET var EQ . expr IN expr  (7)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 53
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 47
	expr : IF expr THEN expr . ELSE expr  (8)

	ELSE  shift 54
	.  error


state 48
	letexpression : LET . var EQ expr letexpression  (4)
	letexpression : LET . var EQ expr SEMISEMI  (5)

	ID  shift 18
	.  error

	var  goto 55


state 49
	expr : LET var EQ expr IN . expr  (7)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 56
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 50
	letexpression : LET var EQ expr SEMISEMI .  (5)

	.  reduce 5


state 51
	letandexpr : LET var EQ expr LETAND . var EQ expr SEMISEMI  (6)

	ID  shift 18
	.  error

	var  goto 57


state 52
	letexpression : LET var EQ expr letexpression .  (4)

	.  reduce 4


state 53
	expr : LET var EQ expr . IN expr  (7)

	IN  shift 49
	.  error


state 54
	expr : IF expr THEN expr ELSE . expr  (8)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 58
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 55
	letexpression : LET var . EQ expr letexpression  (4)
	letexpression : LET var . EQ expr SEMISEMI  (5)

	EQ  shift 59
	.  error


state 56
	expr : LET var EQ expr IN expr .  (7)

	.  reduce 7


state 57
	letandexpr : LET var EQ expr LETAND var . EQ expr SEMISEMI  (6)

	EQ  shift 60
	.  error


state 58
	expr : IF expr THEN expr ELSE expr .  (8)

	.  reduce 8


state 59
	letexpression : LET var EQ . expr letexpression  (4)
	letexpression : LET var EQ . expr SEMISEMI  (5)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 61
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 60
	letandexpr : LET var EQ expr LETAND var EQ . expr SEMISEMI  (6)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 20
	IF  shift 7
	LPAR  shift 8
	.  error

	expr  goto 62
	arith_expr  goto 13
	boolian_expr  goto 14
	factor2_expr  goto 15
	factor_expr  goto 16
	atomic_expr  goto 17


state 61
	letexpression : LET var EQ expr . letexpression  (4)
	letexpression : LET var EQ expr . SEMISEMI  (5)

	LET  shift 48
	SEMISEMI  shift 50
	.  error

	letexpression  goto 52


state 62
	letandexpr : LET var EQ expr LETAND var EQ expr . SEMISEMI  (6)

	SEMISEMI  shift 63
	.  error


state 63
	letandexpr : LET var EQ expr LETAND var EQ expr SEMISEMI .  (6)

	.  reduce 6


24 terminals, 12 nonterminals
28 grammar rules, 64 states
